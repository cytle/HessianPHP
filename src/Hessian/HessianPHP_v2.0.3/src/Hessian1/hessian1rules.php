<?php
$rules[0] = new HessianParsingRule("list", "parseList", "List L type? length? object* z");
$rules[1] = new HessianParsingRule("map", "parseMap", "Map/object M type? (objectobject)* z");
$rules[2] = new HessianParsingRule("remote", "parseRemote", "Remote reference r type? stringtype");
$rules[3] = new HessianParsingRule("null", "parseNull", "Null");
$rules[4] = new HessianParsingRule("boolean", "parseBool", "True");
$rules[5] = new HessianParsingRule("boolean", "parseBool", "False");
$rules[6] = new HessianParsingRule("integer", "parseInteger", "32 bit integer I b32 b24 b16 b8");
$rules[7] = new HessianParsingRule("long", "parseLong", "64bit long L b64 b56 b48 b40 b32 b24 b16 b8");
$rules[8] = new HessianParsingRule("double", "parseDouble", "64bit double D b64 b56 b48 b40 b32 b24 b16 b8");
$rules[9] = new HessianParsingRule("date", "parseDate", "64bit timestamp d b64 b56 b48 b40 b32 b24 b16 b8");
$rules[10] = new HessianParsingRule("string", "parseString", "non final chunk (s b16 b8 string-data)*");
$rules[11] = new HessianParsingRule("string", "parseString", "final chunk S b16 b8 string-data");
$rules[12] = new HessianParsingRule("string", "parseString", "non final chunk (x b16 b8 xml-data)*");
$rules[13] = new HessianParsingRule("string", "parseString", "final chunk X b16 b8 xml-data");
$rules[14] = new HessianParsingRule("binary", "parseBinary", "non final chunk (b b16 b8 binary-data)*");
$rules[15] = new HessianParsingRule("binary", "parseBinary", "final chunk B b16 b8 binary-data");
$rules[16] = new HessianParsingRule("reference", "parseReference", "R b32 b24 b16 b8");
$symbols[86] = 0;
$symbols[77] = 1;
$symbols[114] = 2;
$symbols[78] = 3;
$symbols[84] = 4;
$symbols[70] = 5;
$symbols[73] = 6;
$symbols[76] = 7;
$symbols[68] = 8;
$symbols[100] = 9;
$symbols[115] = 10;
$symbols[83] = 11;
$symbols[120] = 12;
$symbols[66] = 15;
$symbols[98] = 14;
$symbols[82] = 16;